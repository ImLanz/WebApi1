// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi1.Models;

namespace WebApi1.Migrations
{
    [DbContext(typeof(SocioModelContext))]
    partial class SocioModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi1.Models.BarcoModel", b =>
                {
                    b.Property<string>("boatID")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("boatFee")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.Property<string>("boatName")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("credentialPatnerID")
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("mooringNumber")
                        .HasColumnType("varchar(13)");

                    b.HasKey("boatID");

                    b.HasIndex("credentialPatnerID");

                    b.ToTable("BarcoModels");
                });

            modelBuilder.Entity("WebApi1.Models.OutputDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("boatID")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.Property<string>("boatName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<double>("cuota")
                        .HasColumnType("float");

                    b.Property<string>("destiny")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fecha")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("typeUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.HasIndex("boatID");

                    b.ToTable("outputDetails");
                });

            modelBuilder.Entity("WebApi1.Models.PatronModel", b =>
                {
                    b.Property<string>("credentialID")
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("credentialID");

                    b.ToTable("PatronModels");
                });

            modelBuilder.Entity("WebApi1.Models.SocioModel", b =>
                {
                    b.Property<string>("credentialID")
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("credentialID");

                    b.ToTable("SocioModels");
                });

            modelBuilder.Entity("WebApi1.Models.BarcoModel", b =>
                {
                    b.HasOne("WebApi1.Models.SocioModel", "SocioModel")
                        .WithMany()
                        .HasForeignKey("credentialPatnerID");
                });

            modelBuilder.Entity("WebApi1.Models.OutputDetail", b =>
                {
                    b.HasOne("WebApi1.Models.BarcoModel", "BarcoModel")
                        .WithMany()
                        .HasForeignKey("boatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
